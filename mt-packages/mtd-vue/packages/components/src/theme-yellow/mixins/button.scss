@mixin reset-btn() {
  box-sizing: border-box;
  white-space: nowrap;
  -webkit-appearance: none;
  cursor: pointer;
  outline: none;
  text-align: center;
  font-weight: $btn-font-weight;
  user-select: none;
}

@mixin btn-size($fs, $mw, $h, $ph, $iconSize, $iconMarginRight) {
  // font-size: 0; // 消除空格的影响
  min-width: $mw;
  height: $h;
  padding: 0 $ph;
  font-size: $fs;
  $bi: $B +'-before';

  .#{$bi} {
    margin-right: $iconMarginRight;
    font-size: $iconSize;
    width: 1em;
    // height: 1em;
  }

  &.#{$prefix}-btn-text-primary {
    height: $fs + 8px;
  }
}

@mixin btn-color($color,
  $bgc,
  $borderColor,
  $hoverColor,
  $hoverBgc,
  $hoverBorderColor,
  $activeColor,
  $activeBgc,
  $activeBorderColor,
  $disabledColor,
  $disabledBgc,
  $disabledBorderColor,
  $disabledOpactiy) {
  color: $color;
  background: $bgc;
  border-color: $borderColor;

  &:hover,
  &.hover,
  &:focus {
    color: $color;
    background: $hoverBgc;
    border-color: $hoverBorderColor;
  }

  &:active,
  &.active {
    color: $color;
    background: $activeBgc;
    border-color: $activeBorderColor;
  }

  .#{$B + '-before'} {
    color: currentColor;
  }

  $bd: $B + '-disabled';
  $bl: $B + '-loading';

  &.#{$bd} {
    color: $disabledColor;
    background: $disabledBgc;
    border-color: $disabledBorderColor;
    opacity: $disabledOpactiy;
  }

  /* &.#{$bl} {
    color: $color;
    background: $activeBgc;
    border-color: $activeBorderColor;
  } */

  &.#{$prefix}-btn-ghost {
    background: transparent;
    color: $bgc;
    border-color: $bgc;

    &:hover,
    &:focus {
      background: transparentize($bgc, 0.88);
      color: $bgc;
      border-color: $bgc;
    }

    &:active {
      background: transparentize($bgc, 0.76);
      color: $bgc;
      border-color: $bgc;
    }

    &.#{$bd} {
      color: $btn-disabled-color;
      background: $btn-disabled-bgc;
      border-color: $btn-disabled-border-color;
    }

    /* &.#{$bl} {
      color: $activeBorderColor;
      background: transparent;
      border-color: $activeBorderColor;
    } */
  }
}

@mixin btn-text-color($color,
  $hoverColor,
  $hoverBgc,
  $activeColor,
  $activeBgc,
  $disabledColor,
  $disabledOpacity) {
  color: $color;
  border-color: transparent !important;
  background-color: transparent;

  &:hover,
  &.hover,
  &:focus,
  &:active,
  &.active {
    border-color: transparent;
  }

  &:hover,
  &.hover,
  &:focus {
    color: $hoverColor;
    background-color: $hoverBgc;
  }

  &:active,
  &.active {
    color: $activeColor;
    background-color: $activeBgc;
  }

  &.#{$B + '-loading'} {
    color: $activeColor;
  }

  &.#{$B + '-disabled'} {
    color: $disabledColor;
    background-color: transparent;
    opacity: $disabledOpacity;
  }

  .#{$B + '-before'} {
    color: $color;
  }
}

@mixin btn-icon-color($color, $hoverColor, $activeColor, $disableColor) {
  color: $color;

  &:hover,
  &.hover,
  &:focus {
    color: $hoverColor;
  }

  &:active,
  &.active {
    color: $activeColor;
  }

  $bd: $B + '-disabled';

  &.#{$bd} {
    color: $disableColor;
  }

  &.#{$B + '-loading'} {
    color: $activeColor;
  }
}

@mixin btn-default-hover() {
  color: $btn-hover-color;
  border-color: $btn-hover-border-color;
  background-color: $btn-hover-bgc;
}

@mixin btn-default-desiabled() {
  color: $btn-disabled-color;
  border-color: $btn-disabled-border-color;
  background: $btn-disabled-bgc;
  opacity: $btn-disabled-opacity;
  cursor: not-allowed;
}