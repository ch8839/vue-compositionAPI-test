@import "./common/var.scss";
@import "./mixins/mixins.scss";

@keyframes mtd-line-scale {
  0% {
    transform: scaley(1.0);
  }

  50% {
    transform: scaley(0.4);
  }

  100% {
    transform: scaley(1.0);
  }
}

@function loading-delay($interval, $count, $index) {
  @return ($index * $interval) - ($interval * $count);
}

@mixin mtd-line-scale($n: 5) {
  @for $i from 1 through $n {
    >div:nth-child(#{$i}) {
      animation: mtd-line-scale 1s loading-delay(0.1s, $n, $i) infinite cubic-bezier(.2, .68, .18, 1.08);
    }
  }
}


@include c(loading) {
  text-align: center;

  &-nested {
    position: relative;

    .#{$B} {
      position: absolute;
      z-index: 1; // 🐟for lowcode render
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);
      z-index: 1;
    }

    .#{$B}-container {
      transition: opacity linear .3s;
    }

    .#{$B}-blur {
      opacity: 0.25;
      pointer-events: none;
      user-select: none;
      overflow: hidden;
    }
  }

  &-message {
    color: $loading-message-color;
    font-size: $loading-message-font-size;
    font-weight: $loading-message-font-weight;
    margin-top: 4px;
  }

  &-flex {
    display: flex;
    align-items: center;

    .#{$B}-message {
      margin-left: 4px;
      margin-top: 0;
    }
  }

  // type
  &-line-scale {
    display: inline-block;
    vertical-align: middle;
    height: $loading-line-height;
    @include mtd-line-scale();
    color: $loading-color;
    font-size: 0;

    >div {
      background-color: currentColor;
      animation-fill-mode: both;
      width: $loading-line-width;
      height: 100%;
      border-radius: 2px;
      margin: $loading-line-spacing;
      display: inline-block;
    }
  }

  &-circle {
    color: $color-text-2;
    display: inline-block;
    vertical-align: top;
    animation: wrapRotate linear 1.5s infinite;
  }

  &-small &-message {
    font-size: $loading-small-font-size;
  }

  &-large &-message {
    font-size: $loading-large-font-size;
  }

}

@keyframes wrapRotate {
  0% {
    transform: rotate(0deg);
  }

  100% {
    transform: rotate(360deg);
  }
}